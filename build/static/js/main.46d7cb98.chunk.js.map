{"version":3,"sources":["context/UserProvider/context.js","service/helpers.js","service/api/requestBase.js","service/api/UserAPI.js","context/UserProvider/index.js","context/ModalProvider/context.js","components/Text/index.js","components/Button/index.js","components/Modal/index.js","context/ModalProvider/index.js","routes/Transactions/User/index.js","context/UserProvider/withProvider.js","service/api/TransactionAPI.js","routes/Transactions/List/Item/Details/index.js","service/enums.js","routes/Transactions/List/Item/index.js","context/ModalProvider/withProvider.js","routes/Transactions/List/index.js","routes/Transactions/index.js","App.js","index.js"],"names":["UserContext","createContext","userContext","user","capitalize","string","charAt","toUpperCase","slice","isArray","a","Array","isObject","o","Object","keysToCamel","n","keys","forEach","k","str","toLowerCase","replace","m","map","i","API_URL","httpClient","method","path","timeout","additionalHeaders","param","params","query","data","headers","pathWithParams","axios","url","baseURL","response","get","post","put","remove","create","API","UserProvider","children","useState","setUser","useEffect","UserAPI","fetchUser","Provider","value","React","Children","only","ModalContext","component","showModal","hideModal","Text","className","classnames","Button","props","Modal","open","onClick","ModalProvider","setComponent","modalContext","User","firstName","lastName","amount","withUserProvier","Component","Consumer","contexts","list","prefix","enhancer","compose","id","transaction","setTransaction","TransactionAPI","fetchTransaction","type","convertedData","effectiveDate","Date","List","userId","transactions","setTransactions","fetchTransactions","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46d7cb98.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const UserContext = createContext({\n  userContext: {\n    user: {}\n  },\n});\n","export function capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport const isArray = a => Array.isArray(a);\n\nexport const isObject = o =>\n  o === Object(o) && !isArray(o) && typeof o !== 'function';\n\nexport const toCamelCase = str => {\n  if (str.toLowerCase() !== str) {\n    str.toLowerCase();\n  }\n  return str.replace(/_([a-z])/g, m => m.toUpperCase()).replace(/_/g, '');\n};\n\nexport const toSnakeCase = str =>\n  str\n    .split(/(?=[A-Z])/)\n    .join('_')\n    .toLowerCase();\n\nexport const keysToCamel = o => {\n  if (isObject(o)) {\n    const n = {};\n\n    Object.keys(o).forEach(k => {\n      n[toCamelCase(k)] = keysToCamel(o[k]);\n    });\n    return n;\n  }\n  if (isArray(o)) {\n    return o.map(i => keysToCamel(i));\n  }\n\n  return o;\n};\n\nexport const keysToSnake = o => {\n  if (isObject(o)) {\n    const n = {};\n\n    Object.keys(o).forEach(k => {\n      n[toSnakeCase(k)] = keysToSnake(o[k]);\n    });\n\n    return n;\n  }\n  if (isArray(o)) {\n    return o.map(i => keysToSnake(i));\n  }\n\n  return o;\n};\n","import axios from 'axios';\n\nimport { keysToCamel } from 'service/helpers.js'\n\nconst API_URL = 'http://localhost:4000/api/v1';\n\nconst httpClient = (method = 'get') => ({\n  path = '',\n  timeout = 5000,\n  additionalHeaders = {},\n}) => async ({\n  params = {},\n  query = {},\n  data = {},\n} = {}) => {\n  const headers = {\n    ...additionalHeaders\n  };\n\n  let pathWithParams = path;\n  for (const param in params) {\n    pathWithParams = pathWithParams.replace(param, params[param]);\n  };\n\n  try {\n    const response = await axios({\n      url: pathWithParams,\n      baseURL: API_URL,\n      params: query,\n      method,\n      timeout,\n      headers,\n      data,\n    });\n\n    return response?.data && keysToCamel(response?.data);\n  } catch (error) {\n    return error;\n  }\n};\n\nexport default {\n  get: httpClient(),\n  post: httpClient('post'),\n  put: httpClient('put'),\n  remove: httpClient('delete'),\n}\n","import API from 'service/api/requestBase.js';\n\nexport default {\n  create: API.post({ path: '/users/' }),\n  get: API.get({ path: '/users/:id' }),\n};\n","import React, { useEffect, useState } from 'react';\n\nimport { UserContext } from './context';\nimport UserAPI from 'service/api/UserAPI.js';\n\nconst UserProvider = ({ children, ...props }) => {\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const data = await UserAPI.get({});\n      setUser(data);\n    };\n    fetchUser();\n  }, [])\n\n  return (\n    <UserContext.Provider\n      value={{\n        userContext: {\n          user\n        },\n      }}\n    >\n      {React.Children.only(children)}\n    </UserContext.Provider>\n  );\n}\n\nexport default UserProvider;\n","import { createContext } from 'react';\n\nexport const ModalContext = createContext({\n  userContext: {\n    component: null,\n    showModal: () => {},\n    hideModal: () => {},\n  },\n});\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport './index.css';\n\nconst Text = ({\n  className,\n  children\n}) => {\n  return (\n    <p className={classnames('app-text', { [className]: !!className })}>{children}</p>\n  );\n}\n\nexport default Text;\n","import React from 'react';\n\nimport Text from 'components/Text';\n\nimport './index.scss';\n\nconst Button = ({\n  children,\n  ...props\n}) => {\n  return (\n    <button className='app-button' {...props}>\n      <Text>{children}</Text>\n    </button>\n  );\n}\n\nexport default Button;\n","import React from 'react';\n\nimport Button from 'components/Button/index.js';\n\nimport './index.scss';\n\nconst Modal = ({\n  component,\n  open,\n  hideModal,\n  ...props\n}) => {\n  return (\n    <div className='app-modal'>\n      <div className=\"app-modal__container\">\n        <div className=\"app-modal__content\">\n          {component}\n        </div>\n        <Button onClick={hideModal}>Close</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;\n","import React, { useState } from 'react';\n\nimport { ModalContext } from './context';\nimport Modal from 'components/Modal';\n\nconst ModalProvider = ({ children }) => {\n  const [component, setComponent] = useState(null);\n\n  const showModal = (component) => {\n    setComponent(component);\n  };\n\n  const hideModal = () => {\n    setComponent(null);\n  };\n\n  return (\n    <ModalContext.Provider\n      value={{\n        modalContext: {\n          component,\n          showModal,\n          hideModal,\n        },\n      }}\n    >\n      {children}\n      {component ? (\n        <Modal\n          component={component}\n          hideModal={hideModal}\n        />\n      ) : null}\n    </ModalContext.Provider>\n  );\n}\n\nexport default ModalProvider;\n","import React from 'react';\n\nimport Text from 'components/Text';\n\nimport './index.scss';\n\nfunction User({\n  firstName,\n  lastName,\n  amount,\n}) {\n  return (\n    <div className='app-transactions-user'>\n      <Text className='app-transactions-user__name'>Hello, {firstName} {lastName}</Text>\n      <Text className='app-transactions-user__amount'>Account Ballance ${amount}</Text>\n    </div>\n  );\n}\n\nexport default User;\n","import React from 'react';\nimport { UserContext } from './context';\n\nexport function withUserProvier(Component) {\n  return function HOC(props) {\n    return (\n      <UserContext.Consumer>\n        {contexts => <Component {...props} {...contexts} />}\n      </UserContext.Consumer>\n    );\n  };\n}\n","import API from 'service/api/requestBase.js';\n\nexport default {\n  create: API.post({ path: '/transactions/' }),\n  get: API.get({ path: '/transactions/:id' }),\n  list: API.get({ path: '/transactions/' }),\n};\n","import React, { useState, useEffect } from 'react';\nimport classnames from 'classnames';\nimport { compose } from 'redux'\n\nimport Text from 'components/Text';\n\nimport { capitalize } from 'service/helpers.js'\nimport { DEBIT, CREDIT } from 'service/enums.js'\nimport { withUserProvier } from 'context/UserProvider/withProvider.js';\nimport TransactionAPI from 'service/api/TransactionAPI.js';\n\nimport './index.scss';\n\nconst prefix = 'app-transactions-list-item-details';\nfunction Details({\n  id,\n  userContext: { user }\n}) {\n  const [transaction, setTransaction] = useState(null);\n\n  useEffect(() => {\n    const fetchTransaction = async () => {\n      const data = await TransactionAPI.get({ params: { ':id': id }});\n      setTransaction(data);\n    };\n    fetchTransaction();\n  }, []);\n\n  const type = transaction?.type;\n  const convertedData = transaction?.effectiveDate ? new Date(transaction?.effectiveDate * 1000) : '-';\n\n  return (\n    <div className={prefix}>\n      {transaction != null && (\n        <>\n          <Text className={`${prefix}__date`}>{`${convertedData}`}</Text>\n          <Text className={classnames(`${prefix}__type`, {\n            [`${prefix}__debit`]: type == DEBIT,\n            [`${prefix}__credit`]: type == CREDIT,\n          })}>\n            {capitalize(type)}\n          </Text>\n          <Text className={`${prefix}__amount`}>${transaction?.amount}</Text>\n          <Text className={`${prefix}__author`}>{user.firstName} {user.lastName}</Text>\n        </>\n      )}\n    </div>\n  );\n}\n\nconst enhancer = compose(\n  withUserProvier\n);\n\nexport default enhancer(Details);\n","export const CREDIT = 'credit';\nexport const DEBIT = 'debit';\n","import React from 'react';\nimport classnames from 'classnames';\nimport { compose } from 'redux'\n\nimport TransactionDetails from 'routes/Transactions/List/Item/Details';\nimport Text from 'components/Text';\n\nimport { capitalize } from 'service/helpers.js'\nimport { DEBIT, CREDIT } from 'service/enums.js'\nimport { withModalProvier } from 'context/ModalProvider/withProvider.js';\n\nimport './index.scss';\n\nfunction Item({\n  id,\n  type,\n  amount,\n  effectiveDate,\n  modalContext: { showModal },\n}) {\n  const handleClick = () => {\n    showModal(<TransactionDetails id={id} />)\n  };\n\n  return (\n    <div className='app-transactions-list-item' onClick={handleClick}>\n      <Text className={classnames({\n        'app-transactions-list-item__debit': type == DEBIT,\n        'app-transactions-list-item__credit': type == CREDIT,\n      })}>\n        {capitalize(type)}\n      </Text>\n      <Text>${amount}</Text>\n    </div>\n  );\n}\n\nconst enhancer = compose(\n  withModalProvier\n);\n\nexport default enhancer(Item);\n","import React from 'react';\nimport { ModalContext } from './context';\n\nexport function withModalProvier(Component) {\n  return function HOC(props) {\n    return (\n      <ModalContext.Consumer>\n        {contexts => <Component {...props} {...contexts} />}\n      </ModalContext.Consumer>\n    );\n  };\n}\n","import React, { useState, useEffect } from 'react';\n\nimport Text from 'components/Text';\nimport Transaction from 'routes/Transactions/List/Item';\nimport TransactionAPI from 'service/api/TransactionAPI.js';\n\nimport './index.scss';\n\nfunction List({\n  userId\n}) {\n  const [transactions, setTransactions] = useState([]);\n\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      const data = await TransactionAPI.list({ query: { userId }});\n      setTransactions(data?.transactions);\n    };\n    fetchTransactions();\n  }, []);\n\n  return (\n    <div className='app-transactions-list'>\n      <Text className='app-transactions-list__header'>Transactions</Text>\n      {transactions.map(transaction => (\n        <Transaction {...transaction} />\n      ))}\n    </div>\n  );\n}\n\nexport default List;\n","import React from 'react';\nimport { compose } from 'redux'\n\nimport User from 'routes/Transactions/User';\nimport List from 'routes/Transactions/List';\nimport { withUserProvier } from 'context/UserProvider/withProvider.js';\n\nimport './index.css';\n\nfunction Transactions({\n  userContext: { user },\n}) {\n  return (\n    <div className='app-transactions'>\n      <User {...user} />\n      <List userId={user?.id} />\n    </div>\n  );\n}\n\nconst enhancer = compose(\n  withUserProvier\n);\n\nexport default enhancer(Transactions);\n","import React from 'react';\n\nimport UserProvider from 'context/UserProvider/index.js';\nimport ModalProvider from 'context/ModalProvider/index.js';\nimport Transactions from 'routes/Transactions';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <UserProvider>\n      <ModalProvider>\n        <Transactions />\n      </ModalProvider>\n    </UserProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}